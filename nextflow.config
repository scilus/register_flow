process {
    tag = {"$sid"}
    publishDir = {"./results_registration/$sid/$task.process"}
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'ignore' }
    maxRetries = 3
    maxErrors = -1
    scratch = true
    stageInMode = 'copy'
    stageOutMode = 'rsync'
}

params {
    help=false
    root=false
    template=false
    output_dir="./results_registration/"

    // **Template T1 path** //
    run_bet=false
    template_t1_for_bet="/human-data/mni_152_sym_09c/t1"

    trk_keep_invalid = false
    trk_cut_invalid = false
    trk_remove_invalid = false

    params.outdir_t1=[path: {"./$params.output_dir/$sid/"}]
    params.registration_metrics=[path: {"./$params.output_dir/$sid/Metrics_into_template_space/"}]
    params.registration_trks=[path: {"./$params.output_dir/$sid/Trks_into_template_space/"}]
    params.registration=[path: {"./$params.output_dir/$sid/Non-Linear_Registration_To_Template/"}]

    // **Transformation** //
        transfo="s"
        script_registration="antsRegistrationSyN.sh"
        linear_registration=false
        quick_registration=false

    // **Number of processes per tasks**//
        processes_register=4

    //**Process control**//
        processes = false
}

if(params.linear_registration)
{
  params.transfo="a"
  params.registration=[path: {"./$params.output_dir/$sid/Linear_Registration_To_Template/"}]
}

if(params.quick_registration)
{
  params.script_registration="antsRegistrationSyNQuick.sh"
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

singularity.autoMounts = true

profiles {
    fully_reproducible {
        params.processes_register=1
    }

    macos {
            process.scratch="/tmp"
    }
}
